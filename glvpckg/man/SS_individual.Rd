% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SteadyS_individual.R
\name{SS_individual}
\alias{SS_individual}
\title{SS_diffmeansALL Function}
\usage{
SS_individual(uniqueID, output, tolerance, params, wd)
}
\arguments{
\item{uniqueID}{Character: A unique identifier for the simulation run.}

\item{output}{Matrix: Simulation results where rows represent species and columns represent time steps.}

\item{tolerance}{Numeric: Tolerance value for determining the steady state. It is transformed using \code{log(tolerance^2)}.}

\item{params}{List: A list containing parameters for the simulation, including 'Interactions' and 'Growths'.}

\item{wd}{Character: Working directory where the results will be saved.}
}
\value{
A list containing:
\itemize{
  \item \code{Stable_gens}: Numeric vector where each index corresponds to a species and contains the generation at which that species reaches the steady state.
  \item \code{Transformed_tolerance}: Numeric value of the transformed tolerance, used for comparison. log(tolerance^2)
  \item \code{Tolerance}: Numeric value of the original tolerance.
}
}
\description{
This function searches for steady states in a simulation by analyzing the squared differences in the simulation results over time.
}
\details{
The function calculates the squared differences between successive time steps for each species, applies a log transformation,
and determines if the differences fall below a specified tolerance. It then calculates the generation at which each species reaches a steady state.
}
\examples{
# Example usage:

wd <- "~/Documents/LAB_ECO"

# Initial parameters
N_species = 2
C0 = 0.45
CN = 0.2
Diag_val = -0.5

# Generate ID
uniqueID <- generate_uniqueID(wd)

# Generate parameters
seeds_path <- file.path(wd, "Seeds.tsv" )
params <- generate (N_species, seeds_path, C0, CN, Diag_val)

# Generate simulation
times <- 20 # Define the number of generations
output <- Simulate_output(N_species, params = params, times = times, norm = FALSE)

tolerance = 0.05
SS_individual(uniqueID, output, tolerance, params, wd)

}
